/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var OAE = require('oae-util/lib/oae');

var TenantsAPI = require('oae-tenants');

//////////////////
// Global admin //
//////////////////

/*!
 * Get a list of all available tenants
 */
OAE.globalAdminServer.get('/api/tenants', function(req, res, next) {
    req.telemetryUrl = '/api/tenants';
    var tenants = TenantsAPI.getTenants();
    res.send(200, tenants);
});

/*!
 * Get the metadata of the current tenant
 */
OAE.globalAdminServer.get('/api/tenant', function(req, res) {
    req.telemetryUrl = '/api/tenant';
    res.send(200, req.ctx.tenant());
});

/*!
 * Get a tenant's metadata
 */
OAE.globalAdminServer.get('/api/tenant/:alias', function(req, res) {
    req.telemetryUrl = '/api/tenant/alias';
    var tenant = TenantsAPI.getTenant(req.params.alias);
    if (!tenant) {
        return res.send(404, 'There is no tenant with alias ' + req.params.alias);
    }
    res.send(200, tenant);
});

/*!
 * Create a new tenant
 */
OAE.globalAdminServer.post('/api/tenant/create', function(req, res) {
    req.telemetryUrl = '/api/tenant/create';
    TenantsAPI.createTenant(req.ctx, req.body.alias, req.body.displayName, req.body.host, function(err, tenant) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200, tenant);
    });
});

/*!
 * Start an existing tenant
 */
OAE.globalAdminServer.post('/api/tenant/start', function(req, res) {
    req.telemetryUrl = '/api/tenant/start';
    // Sets the tenant to be ENABLED by passing in 'false'
    TenantsAPI.disableTenants(req.ctx, req.body.aliases, false, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200);
    });
});

/*!
 * Stop an existing tenant
 */
OAE.globalAdminServer.post('/api/tenant/stop', function(req, res) {
    req.telemetryUrl = '/api/tenant/stop';
    // Sets the tenant to be disabled by passing in 'true'
    TenantsAPI.disableTenants(req.ctx, req.body.aliases, true, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200);
    });
});

/*!
 * Delete an existing tenant
 */
OAE.globalAdminServer.post('/api/tenant/delete', function(req, res) {
    req.telemetryUrl = '/api/tenant/delete';
    TenantsAPI.deleteTenants(req.ctx, req.body.aliases, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200);
    });
});

/*!
 * Update a tenant's metadata
 */
OAE.globalAdminServer.post('/api/tenant/:alias', function(req, res) {
    req.telemetryUrl = '/api/tenant/alias';
    TenantsAPI.updateTenant(req.ctx, req.params.alias, req.body, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200);
    });
});


/////////////
// Tenants //
/////////////

/*!
 * Get the metadata of the current tenant
 */
OAE.tenantServer.get('/api/tenant', function(req, res) {
    req.telemetryUrl = '/api/tenant';
    var tenant = TenantsAPI.getTenant(req.ctx.tenant().alias);
    if (!tenant) {
        return res.send(404, 'There is no tenant with alias ' + req.ctx.tenant().alias);
    }
    res.send(200, tenant);
});

/*!
 * Update the current tenant's metadata
 */
OAE.tenantServer.post('/api/tenant', function(req, res) {
    req.telemetryUrl = '/api/tenant';
    TenantsAPI.updateTenant(req.ctx, req.ctx.tenant().alias, req.body, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200);
    });
});
